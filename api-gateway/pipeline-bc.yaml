apiVersion: build.openshift.io/v1
kind: BuildConfig
metadata:
  annotations:
    pipeline.alpha.openshift.io/uses: '[{"name": "jenkins", "namespace": "", "kind": "DeploymentConfig"}]'
  labels:
    app: api-gateway-pipeline
    group: cicd
    name: api-gateway-pipeline
    template: cicd
  name: api-gateway-pipeline
  namespace: cicd-andrew
spec:
  failedBuildsHistoryLimit: 5
  nodeSelector: {}
  output: {}
  postCommit: {}
  resources: {}
  runPolicy: Serial
  source:
    type: None
  strategy:
    jenkinsPipelineStrategy:
      env:
        - name: DEV_PROJECT
          value: dev-andrew
        - name: STAGE_PROJECT
          value: stage-andrew
        - name: ENABLE_QUAY
          value: 'false'
      jenkinsfile: |-
        def mvnCmd = "mvn -s cicd-settings-nexus3.xml"                  
            def mvnCmd1 = "mvn -s ../cicd-settings-nexus3.xml"
            def mvnCmd2 = "mvn -s ../../cicd-settings-nexus3.xml"
            pipeline {
              agent {
                label 'maven'
              }
              stages {
                stage('Build App') {
                  steps {
                    git branch: '2.0.1', url: 'https://github.com/woyaofuwu/open-capacity-f'                
                    sh "${mvnCmd} clean install package -DskipTests"
                  }
                }
                
                stage('Code Analysis') {
                  steps {
                    script {
                      sh "${mvnCmd} sonar:sonar -Dsonar.host.url=http://sonarqube:9000 -DskipTests=true"
                    }
                  }
                }
                /**stage('Archive App') {
                  steps {
                    sh "${mvnCmd} deploy -DskipTests=true "//-P nexus3 20200716 pom.xml settings.xml 配置调整后可以deploy
                  }
                }**/
                stage('Build user-server Image') {
                  steps {                   
                    //sh "cd register-center/eureka-server && ${mvnCmd2} docker:build -Dfabric8.namespace=dev-open-capacity "
                    //sh t"cd oauth-center/auth-server && ${mvnCmd2} docker:build -Dfabric8.namespace=dev-open-capacity "
                    //sh "cd oauth-center/auth-sso && ${mvnCmd2} docker:build -Dfabric8.namespace=dev-open-capacity "
                    //sh "cd api-gateway && ${mvnCmd2} docker:build -Dfabric8.namespace=dev-open-capacity "
                   // sh "cd new-api-gateway && ${mvnCmd2} docker:build -Dfabric8.namespace=dev-open-capacity "
                    script {
                      openshift.withCluster() {
                        openshift.withProject(env.DEV_PROJECT) {
                          openshift.selector("bc", "api-gateway").startBuild("--from-file=api-gateway/target/api-gateway.jar", "--wait=true")            
                          }
                      }
                    }
                  }
                }
              }
            }
    type: JenkinsPipeline
  successfulBuildsHistoryLimit: 5
  triggers:
    - github:
        secret: vRDKH6aK
      type: GitHub
    - generic:
        secret: vRDKH6aK
      type: Generic
